@page "/ForgotPassword"

@inject HttpClient Http
@inject NavigationManager navManager
@inject LocalStorageService storage

<body class="login-background" style="background-image: url(/media/Abstract-Background.png)">
    <div class="login-box">
        <div class="col-md-12">
            <section>
                <h2>Forgot your password?</h2>

                <h4>No worries!</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group mt-2">
                    <label>Email</label>
                    <input type="email" class="form-control" @bind-value="@email" />
                    <span id="email-span" class="text-danger">@emailSpan</span>
                </div>
                <span id="result-span" class="text-info">@resultSpan</span>
                <span id="error-span" class="text-danger" style="display:block">@errorSpan</span>
                <div class="form-group mt-4" style="display:inline-block">
                    <button class="btn btn-primary mt-2" @onclick="OnClickSubmit">Submit</button>
                </div>
            </section>
        </div>
    </div>
</body>

@code {
    // Input fields
    string email;

    // Spans
    string emailSpan;
    string resultSpan;
    string errorSpan;

    protected async override Task OnInitializedAsync()
    {
      
    }

    private async Task OnClickSubmit(MouseEventArgs e)
    {
        emailSpan = "";
        resultSpan = "";
        errorSpan = "";

        if (string.IsNullOrWhiteSpace(email))
        {
            emailSpan = "Please input an email.";
            return;
        }

        string encodedEmail = System.Web.HttpUtility.UrlEncode(email);

        string json = await Http.GetStringAsync($"User/RequestPasswordReset?email={encodedEmail}");

        TaskResult result = Newtonsoft.Json.JsonConvert.DeserializeObject<TaskResult>(json);

        if (result.Success)
        {
            resultSpan = result.Message;
        }
        else{
            errorSpan = result.Message;
        }
    }
}
