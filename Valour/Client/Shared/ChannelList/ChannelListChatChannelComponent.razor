@implements IDisposable

@inject ClientWindowManager windowManager
@inject ClientPlanetManager planetManager
@inject ChannelListContextMenu channelContextMenu

<div class="@Chosen_CSS" @onclick="OnClick" draggable="true" ondrag="setDragging(event)" ondragover="setDraggedOver(event)" ondrop="Drop(event)" id="@Channel.Id" @oncontextmenu="OnContextMenu">
    <img class="chat-icon" src="media/Channel-Icon.svg">
    <p class="channel-name">
        @Channel.Name
    </p>
</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public ClientPlanetChatChannel Channel { get; set; }

    public string Chosen_CSS
    {
        get
        {
            if (planetManager.IsChatChannelOpen(Channel))
            {
                return "channel open";
            }

            return "channel";
        }
    }

    public async Task OnChannelWindowUpdate()
    {
        StateHasChanged();
    }

    public async Task OnClick()
    {
        ClientWindow window = windowManager.GetSelectedWindow();

        Console.WriteLine(window.Index);

        if (window is ChatChannelWindow)
        {
            ChatChannelWindow channelWindow = (ChatChannelWindow)window;
            if (channelWindow != null)
            {
                // It's the same channel, cancel
                if (channelWindow.Channel.Id == Channel.Id)
                {
                    return;
                }

                Console.WriteLine(Channel.Name);
                await channelWindow.Component.OnWindowChannelChange(Channel);
                await planetManager.RefreshOpenedChannels();
            }
        }

    }

    public async Task OnContextMenu(MouseEventArgs e)
    {
        await channelContextMenu.Open(e, Channel);
    }

    protected override async Task OnInitializedAsync()
    {
        planetManager.OnChatChannelUpdate += OnChatChannelUpdate;
        planetManager.OnChannelWindowUpdate += OnChannelWindowUpdate;
    }

    public async Task OnChatChannelUpdate(ClientPlanetChatChannel channel)
    {
        if (Channel.Id == channel.Id)
        {
            this.Channel = channel;
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        planetManager.OnChatChannelUpdate -= OnChatChannelUpdate;
    }
}