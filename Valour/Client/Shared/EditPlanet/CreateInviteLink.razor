@inject HttpClient http
@inject NavigationManager navManager
@inject ClientPlanetManager planetManager
@using Valour.Shared
@inject HttpClient Http

<br />
<div style="margin-bottom: 12%;margin-top:25px;">
    <center><h3>Create Invite</h3></center>
    <p>How long will this invite last, in hours. (put 0 to make invite permanent)</p>
    <center><input class="form-control" type="text" @bind-value="@nameValue" style="width:15%;" /></center>

    <center>
        @if (!Failed) {
            <p style="margin-top:10px;">Invite Link: <a href="@nameSpan" class="EnableRightCLick">@nameSpan</a></p>
        }
        else {
            <p style="margin-top:10px;color:red;">@nameSpan</p>
        }
        <br>

        <div class="btn btn-outline-primary" @onclick="OnSaveChanges">Create Invite</div>
    </center>
</div>

@code {
    [Parameter]
    public ClientPlanet Planet { get; set; }

    public string nameValue;

    public string nameSpan;
    
    public bool Failed = false;

    protected override async Task OnInitializedAsync()
    {
        nameValue = "0";

        StateHasChanged();
    }

    public async Task OnSaveChanges()
    {

        ulong planet_id = planetManager.GetCurrent().Id;

        ulong userid = ClientUserManager.User.Id;
        string token = ClientUserManager.UserSecretToken;

        string json = await Http.GetStringAsync($"Invite/CreateInvite?planet_id={planet_id}" +
                                                               $"&userid={userid}" +
                                                               $"&hours={nameValue}" +
                                                               $"&token={token}");

        TaskResult<ClientPlanetInvite> result = Newtonsoft.Json.JsonConvert.DeserializeObject<TaskResult<ClientPlanetInvite>>(json);

        if (!result.Success)
        {
            nameSpan = result.Message;
            Failed = true;
            StateHasChanged();
            return;
        }

        string link = navManager.BaseUri.TrimEnd('/') + "/I/" + result.Data.Code;

        nameSpan = link;
        
        Console.WriteLine(link);

        StateHasChanged();
    }

}
