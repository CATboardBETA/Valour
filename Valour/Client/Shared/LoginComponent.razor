@inject HttpClient Http
@inject NavigationManager navManager
@inject LocalStorageService storage
@inject AutoMapper.IMapper mapper

<body class="login-background">
    <div class="popup-box">
        <div class="col-md-12">
            <section>
                <h2>Log in to Valour</h2>

                <h4>Welcome back!</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" class="form-control" @bind-value="@email" />
                    <span id="email-span" class="text-danger">@emailSpan</span>
                </div>
                <div class="form-group mt-2">
                    <label>Password</label>
                    <input type="password" class="form-control" @bind-value="@password" />
                    <span id="password-span" class="@passwordspancolor">@passwordSpan</span>
                </div>
                <a class="mt-1 forgot-password" href="/ForgotPassword">Forgot my password</a>
                <div class="form-group mt-4" style="display:inline-block">
                    <button class="btn btn-primary mt-2" @onclick="OnClickLogin">Log in</button>
                    <button class="btn btn-outline-primary mt-2" @onclick="OnClickRegister">Register</button>
                </div>
            </section>
        </div>
    </div>
</body>

@code {
    public string email;
    public string password;

    public string emailSpan;
    public string passwordSpan;
    public string passwordspancolor = "text-danger";

    private async Task OnClickLogin(MouseEventArgs e)
    {
        if (email == null || string.IsNullOrWhiteSpace(email))
        {
            emailSpan = "Please enter your email.";
            return;
        }

            // Fix trailing whitespace
        email = email.Trim();

        if (password == null || string.IsNullOrWhiteSpace(password))
        {
            passwordSpan = "Please enter your password.";
            return;
        }

        // Clear spans
        passwordSpan = "";
        emailSpan = "";

        string encodedEmail = System.Web.HttpUtility.UrlEncode(email);
        string encodedPassword = System.Web.HttpUtility.UrlEncode(password);

        string response = await Http.GetStringAsync($"User/RequestStandardToken?email={encodedEmail}&password={encodedPassword}");

        TaskResult<string> loginResult = Newtonsoft.Json.JsonConvert.DeserializeObject<TaskResult<string>>(response);

        passwordSpan = loginResult.ToString();

        if (loginResult.Success)
        {
            TaskResult result = await ClientUserManager.InitializeUser(loginResult.Data, storage, mapper);
            passwordSpan = result.Message;

            if (result.Success)
            {
                passwordspancolor = "text-success";
                navManager.NavigateTo("/", true);
            }
        }
    }

    private async Task OnClickRegister(MouseEventArgs e)
    {
        navManager.NavigateTo("/AgeVeri", forceLoad: true);
    }
}
