@inject ClientPlanetManager planetManager

<RoleComponent Name="Emperor"></RoleComponent>
<div class="UserList keep-scrolling">
    @if (MemberList != null)
    {
        foreach (var member in MemberList)
        {
            <MemberComponent Only="true" Member="@member" @key="@member.Id"></MemberComponent>
        }
    }
</div>

@code {
    public List<ClientPlanetMember> MemberList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        planetManager.OnPlanetChange += OnPlanetChange;
    }

    public async Task OnPlanetChange(ClientPlanet planet)
    {
        Console.WriteLine($"Member list is updating to {planet.Name}");
        MemberList = await planetManager.GetCachedPlanetMembers(planet);
        MemberList = MemberList.OrderByDescending(GetComparator).ToList();
        Console.WriteLine($"Starting with {MemberList.Count()} members.");
        StateHasChanged();
    }

    public long GetComparator(ClientPlanetMember m)
    {
        var task = m.GetUserAsync();
        task.Wait();

        return task.Result.Last_Active.Ticks;
    }
}
