@inject HttpClient Http
@inject ClientPlanetManager planetManager

<div style="@Item.GetInlineStyle" class="embed-Item">
    @if (Item.Name != null) {
        <div style="color:#@Item.TextColor;font-weight:bold;font-size:14px;">
            @Item.DoMarkdown(Item.Name)
        </div>
    }
    <button type="button" class="btn btn-@Item.Size" style="color:#@Item.TextColor;background-color:#@Item.Color;" @onclick="(async () => await OnEmbedButtonClick())">
        @if (Item.Link != null) {
            <a href="@Item.Link" rel="nofollow" target="_blank">@Item.DoMarkdown(Item.Text)</a>
        }
        else {
            @Item.DoMarkdown(Item.Text)
        }
    </button>
</div>

@code {
    [Parameter]
    public ClientEmbedItem Item {get; set;}
    [Parameter]
    public ClientPlanetMessage Message {get; set;}
    [Parameter]
    public ClientEmbed embed { get; set;}

    public async Task OnEmbedButtonClick()
    {

        ClientPlanetMember SelfMember = await planetManager.GetPlanetMemberAsync(ClientUserManager.User.Id, Message.Planet_Id);

        InteractionEvent Interaction = new InteractionEvent()
        {
            Event = "Button Click",
            Element_Id = Item.Id,
            Planet_Id = planetManager.GetCurrent().Id,
            Message_Id = Message.Id,
            Author_Member_Id = Message.Member_Id,
            Member_Id = SelfMember.Id,
            Channel_Id = Message.Channel_Id,
            Time_Interacted = DateTime.UtcNow,
            Form_Data = embed.GetFormData()
        };

        HttpResponseMessage httpresponse = await Http.PostAsJsonAsync<InteractionEvent>($"Embed/InteractionEvent?token={ClientUserManager.UserSecretToken}", Interaction);

        TaskResult response = Newtonsoft.Json.JsonConvert.DeserializeObject<TaskResult>(await httpresponse.Content.ReadAsStringAsync());

        Console.WriteLine(response.ToString());
    }

}