@inject ConfirmModal confirmModal

<!-- This modal exists to allow parts of the app to ask for confirmation -->

@if (visible)
{
<div class="modal confirm-modal" id="confirm-modal">
    <!-- Modal content -->
    <div class="modal-confirm-content">
        <div class="popup-box">
            <div class="col-md-12">
                <section>
                    <h2>@confirmModal.title_text</h2>
                    <h4>@confirmModal.desc_text</h4>
                    <hr />
                    <br />
                    <div @onclick="confirmModal.OnCancel" class="btn btn-primary d-inline-block">@confirmModal.cancel_text</div>
                    <div @onclick="confirmModal.OnConfirm" class="btn btn-danger d-inline-block">@confirmModal.confirm_text</div>
                </section>
            </div>
        </div>
    </div>
</div>
}

@code { 

    public bool visible = false;

    protected override async Task OnInitializedAsync()
    {
        confirmModal.Component = this;
    }

    public void SetVisibility(bool value)
    {
        visible = value;
        StateHasChanged();
    }
}
